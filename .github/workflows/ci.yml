---
name: CI

on:
  workflow_call:
    inputs:
      node-versions:
        description: Node.js versions to use for testing
        type: string
        default: "['lts/-2', 'lts/-1', 'lts/*']"
      test-command:
        description: Command used to test your TypeScript program
        required: false
        type: string
        default: npm run --if-present test
      allow-postinstall-scripts:
        description: Flag to allow post-install scripts
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: npm

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          : install npm dependencies
          npm ci --loglevel error "$allow_postinstall_scripts"
        env:
          # Negate the logic here because the value after && must not be falsy, otherwise the || will also execute
          allow_postinstall_scripts: ${{ !inputs.allow-postinstall-scripts && '--ignore-scripts' || '' }}
        shell: bash

      - run: |
          : compile TypeScript
          npm run --if-present build
        shell: bash

      - run: |
          : test
          ${{ inputs.test-command }}
        shell: bash
